- name: Criando Security Group
  local_action:
    module: ec2_group
    name: "{{ sg_name }}"
    description: sg giropops
    profile: "{{ aws_profile }}"
    region: "{{ region }}"
    rules:
    - proto: tcp
      from_port: 22
      to_port: 22
      cidr_ip: 0.0.0.0/0
      rule_desc: SSH
    - proto: tcp
      from_port: 32222
      to_port: 32222
      cidr_ip: 0.0.0.0/0
      rule_desc: Grafana
    - proto: tcp
      from_port: 32111
      to_port: 32111
      cidr_ip: 0.0.0.0/0
      rule_desc: Prometheus
    - proto: all
      group_name: "{{ sg_name }}"
      rule_desc: K8S
    rules_egress:
    - proto: all
      cidr_ip: 0.0.0.0/0
  register: basic_firewall

- name: Criando instancia EC2
  local_action: ec2
    group={{ sg_name }}
    instance_type={{ instance_type }}
    image={{ image }}
    profile={{ aws_profile }}
    wait=true
    region={{ region }}
    keypair={{ key_pair }}
    count={{ count }}
  register: ec2

- name: Adicionando a instancia ao inventario temporario
  add_host: name={{ item.public_ip }} groups=giropops-new
  with_items: "{{ ec2.instances }}"

- name: Add IP publico no arquivo hosts
  local_action: lineinfile
    dest="./hosts"
    regexp={{ item.public_ip }}
    insertafter="[kubernetes]" line={{ item.public_ip }}
  with_items: "{{ ec2.instances }}"

- name: Add IP privado no arquivo hosts
  local_action: lineinfile
    dest="./hosts"
    regexp={{ item.private_ip }}
    insertafter="[kubernetes]" line={{ item.private_ip }}
  with_items: "{{ ec2.instances }}"

- name: Wait SSH
  local_action: wait_for
    host={{ item.public_ip }}
    port=22
    state=started
  with_items: "{{ ec2.instances }}"

- name: Add tag
  local_action: ec2_tag resource={{ item.id }} region={{ region }} profile={{ aws_profile }} state=present
  with_items: "{{ ec2.instances }}"
  args:
    tags:
      Name: ansible-{{ item.ami_launch_index|int + 1 }}
